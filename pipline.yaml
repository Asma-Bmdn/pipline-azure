trigger:
- main

pool:
  name: My-pool

stages:
- stage: MiseAJourInfrastructureAzure
  jobs:
  - job: MiseAJourJob
    displayName: "Mise à jour de l'infrastructure Azure"
    steps:
    - checkout: self

    - script: |
        # Vider la mémoire vive
        free -h
        sudo sysctl vm.drop_caches=3
        free -h

        # Cloner le référentiel Terraform
        git clone https://github.com/Asma-Bmdn/pipline-azure.git
        cd pipline-azure

        # Remplacer les clés dans terraform.tfvars
        sed -i '11s|default = ""|default = "C3DGMZ4WQ"|' terraform.tfvars

        # Terraform init et apply
        terraform init
        terraform apply --auto-approve
      displayName: "Mise à jour de l'infrastructure Azure"
      
 
- job: BuildAndRunDockerContainer
  displayName: 'Build and Run Docker Container'
  steps:
  - checkout: self

  - script: |
      # Vérifier si OpenJDK est installé
      if command -v java &> /dev/null; then
          echo "OpenJDK already installed. Nothing to do."
      else
          # Installer OpenJDK
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk
          echo "OpenJDK installed successfully."
      fi

      # Vérifier si Maven est installé
      if command -v mvn &> /dev/null; then
          echo "Maven already installed. Nothing to do."
      else
          # Installer Maven
          sudo apt-get install -y maven
          echo "Maven installed successfully."
      fi

      # Afficher les versions installées
      java -version
      mvn --version

      # Vérifier la version de Docker
      docker --version
    displayName: 'Install OpenJDK, Maven, and Docker'

  - task: Docker@2
    inputs:
      command: 'build'
      Dockerfile: 'Dockerfile'
      tags: '/docker-repository:latest'

  - script: 'docker run -it docker-repository:latest'
    displayName: 'Run Docker Container'

